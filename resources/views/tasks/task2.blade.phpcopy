<!DOCTYPE html>
<html lang="en">
<head>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.3/dist/jquery.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>

<div class="container">
    <h2>Task 2</h2>
    <p>Uncountable child in each parent category and a child might be a
        parent of another category:</p>
    <ul>
    <?php
    foreach ($categories as $category) { ?>

        <li><?=$category->category_name.'('.$category->total_items.')';?>

        <?php
            $getChildCateg = \App\Http\Controllers\TaskController::getChildCateg($category->category_id);
        ?>
        <ul>
            <?php foreach ($getChildCateg as $getChild)
                    { ?>
                        <li><?=$getChild->category_name.'('.$getChild->total_items.')';?> </li>
                    <?php } ?>
        </ul> </li>

    <?php } ?>

    </ul>
</div>

</body>

<script>
    $(document).ready(function () {
        $('#task1').DataTable();
    });
</script>
</html>



public function task2()
    {

        $categories = Category::select('category.Id as category_id','category.Name as category_name', DB::raw('count(Item.Id) as total_items'))
            ->leftJoin('Item_category_relations', 'category.Id', '=', 'item_category_relations.categoryId')
            ->leftJoin('Item', 'Item_category_relations.ItemNumber', '=', 'Item.Number')
            ->where('category.Id',1)
            ->groupBy('category.Id','category_name')
            ->orderBy('category_name')
            ->get();

        return view('tasks/task2',compact( 'categories'));
    }

    public static function getChildCateg($category_id)
    {
        $categories = Category::select('category.Id as category_id','category.Name as category_name', DB::raw('count(Item.Id) as total_items'))
            ->leftJoin('Item_category_relations', 'category.Id', '=', 'item_category_relations.categoryId')
            ->leftJoin('Item', 'Item_category_relations.ItemNumber', '=', 'Item.Number')
            ->where('category.Id',$category_id)
            ->groupBy('category.Id','category_name')
            ->orderBy('category_name')
            ->get();

        return $categories;
    }
